name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up environment for build
        run: |
          echo "AMAZON_DATABASE_URL=${{ secrets.AMAZON_DATABASE_URL }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "LOGGING_SLACK_WEBHOOK_URL=${{ secrets.LOGGING_SLACK_WEBHOOK_URL }}" >> $GITHUB_ENV
          echo "RDS_DATABASE_PASSWORD=${{ secrets.RDS_DATABASE_PASSWORD }}" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build

      # 리소스 파일 복사
      - name: Copy resources
        run: |
          cp -r src/main/resources/* build/resources/

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: trelloServer
          path: build/libs/trelloServer-0.0.1-SNAPSHOT.jar

      # 리소스 아티팩트로 업로드
      - name: Upload resource artifact
        uses: actions/upload-artifact@v2
        with:
          name: resources
          path: build/resources/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: trelloServer
          path: build/libs/

      # 리소스 파일 다운로드
      - name: Download resource artifact
        uses: actions/download-artifact@v2
        with:
          name: resources
          path: build/resources/

      # EC2에 복사 및 배포
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/trelloServer-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/trelloServer.jar
          # EC2에서 resources 디렉터리 생성
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "mkdir -p /home/${{ secrets.EC2_USERNAME }}/resources/"
          # 리소스 파일 EC2로 복사
          scp -i private_key.pem -o StrictHostKeyChecking=no -r build/resources/* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/resources/
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "pgrep java | xargs kill -9; nohup java -Dspring.resources.static-locations=file:/home/${{ secrets.EC2_USERNAME }}/resources/static/ -Dspring.thymeleaf.prefix=file:/home/${{ secrets.EC2_USERNAME }}/resources/templates/ -jar /home/${{ secrets.EC2_USERNAME }}/trelloServer.jar > app.log 2>&1 &"

          rm -f private_key.pem
          
          # server2
          echo "${{ secrets.EC2_SSH_KEY2 }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/trelloServer-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME2 }}@${{ secrets.EC2_HOST2 }}:/home/${{ secrets.EC2_USERNAME2 }}/trelloServer.jar
          # EC2에서 resources 디렉터리 생성
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME2 }}@${{ secrets.EC2_HOST2 }} "mkdir -p /home/${{ secrets.EC2_USERNAME2 }}/resources/"
          # 리소스 파일 EC2로 복사
          scp -i private_key.pem -o StrictHostKeyChecking=no -r build/resources/* ${{ secrets.EC2_USERNAME2 }}@${{ secrets.EC2_HOST2 }}:/home/${{ secrets.EC2_USERNAME2 }}/resources/
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME2 }}@${{ secrets.EC2_HOST2 }} "pgrep java | xargs kill -9; nohup java -Dspring.resources.static-locations=file:/home/${{ secrets.EC2_USERNAME2 }}/resources/static/ -Dspring.thymeleaf.prefix=file:/home/${{ secrets.EC2_USERNAME2 }}/resources/templates/ -jar /home/${{ secrets.EC2_USERNAME2 }}/trelloServer.jar > app.log 2>&1 &"

          rm -f private_key.pem
